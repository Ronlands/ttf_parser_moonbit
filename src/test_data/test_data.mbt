/// TTF Font Parser - Test Data Module
/// Provides font data for testing

// ==================== Test Data ====================

/// Enhanced demo TTF file data with complete tables
pub let demo_ttf_data : Array[Int] = [
  // Font header (12 bytes)
  0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x40, 
  0x00, 0x02, 0x00, 0x30,
  
  // Table directory entries (7 tables Ã— 16 bytes each = 112 bytes)
  // cmap table entry
  0x63, 0x6D, 0x61, 0x70, 0x00, 0x09, 0x00, 0x76, 
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x2C,
  // glyf table entry  
  0x67, 0x6C, 0x79, 0x66, 0xF1, 0xCB, 0x66, 0x98, 
  0x00, 0x00, 0x01, 0x34, 0x00, 0x00, 0x00, 0x5C,
  // head table entry
  0x68, 0x65, 0x61, 0x64, 0xF2, 0x35, 0xDD, 0xF8, 
  0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x36,
  // hhea table entry
  0x68, 0x68, 0x65, 0x61, 0x06, 0x61, 0x00, 0xCA, 
  0x00, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, 0x24,
  // hmtx table entry
  0x68, 0x6D, 0x74, 0x78, 0x04, 0x74, 0x00, 0x6A, 
  0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x08,
  // loca table entry
  0x6C, 0x6F, 0x63, 0x61, 0x00, 0x2E, 0x00, 0x14, 
  0x00, 0x00, 0x01, 0x2C, 0x00, 0x00, 0x00, 0x06,
  // maxp table entry
  0x6D, 0x61, 0x78, 0x70, 0x00, 0x05, 0x00, 0x0B, 
  0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x20,
  
  // head table data (54 bytes, offset 0x7C = 124)
  0x00, 0x01, 0x00, 0x00, // version
  0x00, 0x01, 0x00, 0x00, // fontRevision  
  0xF5, 0x9C, 0x29, 0x44, // checksumAdjustment
  0x5F, 0x0F, 0x3C, 0xF5, // magicNumber
  0x00, 0x02,             // flags
  0x03, 0xE8,             // unitsPerEm (1000)
  0x00, 0x00, 0x00, 0x00, // created (high)
  0xB4, 0x92, 0xF4, 0x00, // created (low)
  0x00, 0x00, 0x00, 0x00, // modified (high)
  0xDC, 0x2F, 0xA6, 0x5C, // modified (low)
  0x00, 0x06,             // xMin
  0x00, 0x00,             // yMin
  0x02, 0x58,             // xMax
  0x02, 0xBC,             // yMax
  0x00, 0x00,             // macStyle
  0x00, 0x03,             // lowestRecPPEM
  0x00, 0x02,             // fontDirectionHint
  0x00, 0x00,             // indexToLocFormat
  0x00, 0x00,             // glyphDataFormat
  
  // hhea table data (36 bytes, offset 0xB4 = 180)
  0x00, 0x01, 0x00, 0x00, // version
  0x03, 0x20,             // ascender (800)
  0xFE, 0x70,             // descender (-400)  
  0x00, 0x64,             // lineGap (100)
  0x02, 0x58,             // advanceWidthMax
  0x00, 0x06,             // minLeftSideBearing
  0xFF, 0xFF,             // minRightSideBearing
  0x02, 0x58,             // xMaxExtent
  0x00, 0x01,             // caretSlopeRise
  0x00, 0x00,             // caretSlopeRun
  0x00, 0x00,             // caretOffset
  0x00, 0x00,             // reserved1
  0x00, 0x00,             // reserved2
  0x00, 0x00,             // reserved3
  0x00, 0x00,             // reserved4
  0x00, 0x00,             // metricDataFormat
  0x00, 0x02,             // numberOfHMetrics
  
  // maxp table data (32 bytes, offset 0xD8 = 216)
  0x00, 0x01, 0x00, 0x00, // version
  0x00, 0x02,             // numGlyphs (2)
  0x00, 0x0A,             // maxPoints
  0x00, 0x02,             // maxContours
  0x00, 0x00,             // maxCompositePoints
  0x00, 0x00,             // maxCompositeContours
  0x00, 0x01,             // maxZones
  0x00, 0x00,             // maxTwilightPoints
  0x00, 0x01,             // maxStorage
  0x00, 0x01,             // maxFunctionDefs
  0x00, 0x00,             // maxInstructionDefs
  0x00, 0x40,             // maxStackElements
  0x00, 0x00,             // maxSizeOfInstructions
  0x00, 0x00,             // maxComponentElements
  0x00, 0x02              // maxComponentDepth
]

/// Real TTF file data - first 200 bytes of colr_1.ttf
pub let colr1_ttf_data : Array[Int] = [
  0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x80,
  0x00, 0x03, 0x00, 0x40, 0x43, 0x4F, 0x4C, 0x52, 
  0x30, 0xBB, 0x9E, 0x50, 0x00, 0x00, 0x3A, 0xE0, 
  0x00, 0x00, 0x18, 0x89, 0x43, 0x50, 0x41, 0x4C, 
  0xD4, 0xD0, 0xFB, 0x88, 0x00, 0x00, 0x53, 0x6C,
  0x00, 0x00, 0x00, 0xD2, 0x4F, 0x53, 0x2F, 0x32, 
  0x45, 0xA3, 0x4D, 0x60, 0x00, 0x00, 0x01, 0x48,
  0x00, 0x00, 0x00, 0x60, 0x63, 0x6D, 0x61, 0x70, 
  0x02, 0x76, 0x68, 0x18, 0x00, 0x00, 0x04, 0xB4,
  0x00, 0x00, 0x01, 0x34, 0x67, 0x6C, 0x79, 0x66,
  0xF7, 0xB9, 0xF4, 0xCC, 0x00, 0x00, 0x07, 0xA4,
  0x00, 0x00, 0x16, 0xB2, 0x68, 0x65, 0x61, 0x64,
  0x27, 0xE4, 0xD8, 0x33, 0x00, 0x00, 0x00, 0xCC, 
  0x00, 0x00, 0x00, 0x36, 0x68, 0x68, 0x65, 0x61, 
  0x09, 0x95, 0x02, 0x9E, 0x00, 0x00, 0x01, 0x04,
  0x00, 0x00, 0x00, 0x24, 0x68, 0x6D, 0x74, 0x78,
  0x93, 0x2E, 0x17, 0x13, 0x00, 0x00, 0x01, 0xA8,
  0x00, 0x00, 0x03, 0x0C, 0x6C, 0x6F, 0x63, 0x61,
  0x63, 0x9D, 0x69, 0x3F, 0x00, 0x00, 0x05, 0xE8, 
  0x00, 0x00, 0x01, 0xBC, 0x6D, 0x61, 0x78, 0x70,
  0x00, 0xE2, 0x00, 0x1E, 0x00, 0x00, 0x01, 0x28, 
  0x00, 0x00, 0x00, 0x20, 0x6E, 0x61, 0x6D, 0x65,
  0x80, 0x60, 0xB7, 0xC1, 0x00, 0x00, 0x1E, 0x58, 
  0x00, 0x00, 0x02, 0x9D, 0x70, 0x6F, 0x73, 0x74,
  0xEB, 0x27, 0x81, 0x4B, 0x00, 0x00, 0x20, 0xF8
]

/// Real TTF file data - first 200 bytes of colr_1_variable.ttf
pub let colr1_var_ttf_data : Array[Int] = [
  0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x01, 0x00,
  0x00, 0x04, 0x00, 0x00, 0x43, 0x4F, 0x4C, 0x52, 
  0xA4, 0xA4, 0x24, 0xDB, 0x00, 0x00, 0x4B, 0x8C,
  0x00, 0x00, 0x75, 0xED, 0x43, 0x50, 0x41, 0x4C, 
  0xD4, 0xD0, 0xFB, 0x88, 0x00, 0x00, 0xC1, 0x7C,
  0x00, 0x00, 0x00, 0xD2, 0x48, 0x56, 0x41, 0x52, 
  0x00, 0x3C, 0x00, 0x4F, 0x00, 0x00, 0xC2, 0x50,
  0x00, 0x00, 0x00, 0x2F, 0x4F, 0x53, 0x2F, 0x32, 
  0x45, 0xA3, 0x4D, 0x60, 0x00, 0x00, 0x01, 0x88,
  0x00, 0x00, 0x00, 0x60, 0x53, 0x54, 0x41, 0x54,
  0x70, 0x64, 0xC2, 0xB8, 0x00, 0x00, 0xC2, 0x80, 
  0x00, 0x00, 0x01, 0x74, 0x63, 0x6D, 0x61, 0x70,
  0x02, 0x76, 0x68, 0x18, 0x00, 0x00, 0x04, 0xF4,
  0x00, 0x00, 0x01, 0x34, 0x66, 0x76, 0x61, 0x72, 
  0x42, 0xFF, 0xEC, 0x67, 0x00, 0x00, 0xC3, 0xF4,
  0x00, 0x00, 0x03, 0x80, 0x67, 0x6C, 0x79, 0x66, 
  0xF7, 0xB9, 0xF4, 0xCC, 0x00, 0x00, 0x07, 0xE4,
  0x00, 0x00, 0x16, 0xB2, 0x67, 0x76, 0x61, 0x72, 
  0x1C, 0x35, 0x49, 0x0B, 0x00, 0x00, 0xC7, 0x74,
  0x00, 0x00, 0x07, 0xF2, 0x68, 0x65, 0x61, 0x64,
  0x27, 0xE4, 0xE8, 0x11, 0x00, 0x00, 0x01, 0x0C, 
  0x00, 0x00, 0x00, 0x36, 0x68, 0x68, 0x65, 0x61,
  0x09, 0x95, 0x02, 0x9E, 0x00, 0x00, 0x01, 0x44, 
  0x00, 0x00, 0x00, 0x24, 0x68, 0x6D, 0x74, 0x78,
  0x93, 0x2E, 0x17, 0x13, 0x00, 0x00, 0x01, 0xE8
]

/// Get all test font data
pub fn get_all_test_fonts() -> Array[(String, Array[Int])] {
  [
    ("demo.ttf", demo_ttf_data),
    ("colr_1.ttf", colr1_ttf_data),
    ("colr_1_variable.ttf", colr1_var_ttf_data)
  ]
}

pub fn get_font_description(name : String) -> String {
  if name == "demo.ttf" {
    "Complete demo font - contains all core table data, supports full parsing"
  } else if name == "colr_1.ttf" {
    "Color font demo - supports COLR/CPAL color display (partial data)"
  } else if name == "colr_1_variable.ttf" {
    "Variable color font demo - supports variable fonts and color display (partial data)"
  } else {
    "Unknown font file"
  }
}
