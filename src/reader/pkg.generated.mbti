// Generated using `moon info`, DON'T EDIT IT
package "Ronlands/ttf_parser_moonbit/reader"

// Values
fn bytes_to_tag_string(Int, Int, Int, Int) -> String

fn[R : ByteReader] read_tag(R) -> String?

fn[R : ByteReader] read_u16_be(R) -> Int?

fn[R : ByteReader] read_u32_be(R) -> Int?

// Errors

// Types and methods
pub struct ArrayByteReader {
  data : Array[Int]
  mut pos : Int
}
fn ArrayByteReader::length(Self) -> Int // from trait `ByteReader`
fn ArrayByteReader::new(Array[Int]) -> Self
fn ArrayByteReader::output(Self, &Logger) -> Unit // from trait `Show`
fn ArrayByteReader::position(Self) -> Int // from trait `ByteReader`
fn ArrayByteReader::read_byte(Self) -> Int? // from trait `ByteReader`
fn ArrayByteReader::seek(Self, Int) -> Unit // from trait `ByteReader`
fn ArrayByteReader::to_string(Self) -> String // from trait `Show`
impl ByteReader for ArrayByteReader
impl Show for ArrayByteReader

// Type aliases

// Traits
pub trait ByteReader {
  read_byte(Self) -> Int?
  position(Self) -> Int
  seek(Self, Int) -> Unit
  length(Self) -> Int
}

